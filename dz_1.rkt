;#1
(define (day-of-week day month year)
  (if (< month 3)
      (remainder (+ day (quotient (* 31 (+ month 10)) 12) (- year 1) (- (quotient (- year 1) 4) (quotient (- year 1) 100)) (quotient (- year 1) 400)) 7)
      (remainder (+ day (quotient (* 31 (- month 2)) 12) year (- (quotient year 4) (quotient year 100)) (quotient year 400)) 7))
  
  )
(day-of-week 04 12 1975)
(day-of-week 04 12 2006)
(day-of-week 13 09 2021)

;#2
(define (diskr a b c)
  (- (* b b) (* 4 a c))
  )
(define (solve-equation a b c)
  (if (= a 0)
      (if (= b 0)
          (list)
          (list (/ (* -1 c) b)))
      (if (< (diskr a b c) 0)
          (list)
          (if (= (diskr a b c) 0)
              (list (* -1 (/ b (* a 2))))
              (list (/ (+ (* -1 b) (sqrt (diskr a b c))) (* a 2)) (/ (- (* -1 b) (sqrt (diskr a b c))) (* a 2)))
              )
          )
      ))
(solve-equation 3 14 5)
(solve-equation 0 0 5)
(solve-equation 0 3 4)
(solve-equation 1 -2 1)
(solve-equation 1 -2 0)

;#3
(define (my-gcd a b)
  (if (= b 0)
      a
      (my-gcd b (remainder a b))
      )
  )
(my-gcd 12 6)
(define (my-lcm a b)
  (/ (* a b) (my-gcd a b))
  )
(my-lcm 3 4)

(define (factorial a)
  (if (= a 0)
      1
      (* a (factorial (- a 1)))
      )
  )

(define (my-prime? a)
  (= (remainder (+ 1 (factorial (- a 1))) a) 0)
  )
(my-prime? 13)
(my-prime? 6)
